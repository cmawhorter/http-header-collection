{"version":3,"file":"http-header-collection.umd.js","sources":["../src/to-header-name.js","../src/to-header-id.js","../src/find.js","../src/append.js","../src/remove.js","../src/replace.js","../src/collapse.js","../src/from-hash.js","../src/has.js","../src/to-hash.js"],"sourcesContent":["export default function(str) {\n  return (str || '').toString().trim();\n}\n","import toHeaderName from './to-header-name.js'\n\nexport default function(str) {\n  return toHeaderName(str).toLowerCase();\n}\n","import toHeaderId from './to-header-id.js';\n\nexport default function(collection, str) {\n  let searchHeaderId = toHeaderId(str);\n  for (const [headerId, headerName, headerValues] of collection) {\n    if (headerId === searchHeaderId) {\n      return headerValues;\n    }\n  }\n  return null;\n}\n","import toHeaderId from './to-header-id.js';\nimport toHeaderName from './to-header-name.js';\nimport find from './find.js';\n\nexport default function(collection, str, value) {\n  let existingHeader = find(collection, str);\n  if (!existingHeader) {\n    existingHeader = [];\n    collection.push([ toHeaderId(str), toHeaderName(str), existingHeader ]);\n  }\n  // only string is allowed\n  existingHeader.push('' + value);\n}\n","import find from './find.js';\n\nexport default function(collection, str) {\n  let existingHeader = find(collection, str);\n  if (existingHeader) {\n    existingHeader.length = 0;\n  }\n}\n","import remove from './remove.js';\nimport append from './append.js';\n\nexport default function(collection, str, values) {\n  remove(collection, str);\n  values.forEach(value => append(collection, str, value));\n}\n","import replace from './replace.js';\n\nexport default function(collection) {\n  for (const [headerId, headerName, headerValues] of collection) {\n    if (headerValues.length) {\n      let value = headerValues[headerValues.length - 1];\n      replace(collection, headerName, [ value ]);\n    }\n  }\n}\n","import append from './append.js';\n\nexport default function(obj, isFlat) {\n  if (void 0 === isFlat) isFlat = true; // default to expecting flat\n  obj = obj || {};\n  let collection = [];\n  Object.keys(obj).forEach(key => {\n    let value = obj[key];\n    if (isFlat) {\n      append(collection, key, value);\n    }\n    else {\n      if (!Array.isArray(value)) {\n        value = [ value ];\n      }\n      value.forEach(item => append(collection, key, item));\n    }\n  });\n  return collection;\n}\n","import toHeaderId from './to-header-id.js';\n\nexport default function(collection, str, strict) {\n  let searchHeaderId = toHeaderId(str);\n  for (const [headerId, headerName, headerValues] of collection) {\n    if (headerId === searchHeaderId) {\n      return true === strict ? headerValues.length > 0 : true;\n    }\n  }\n  return false;\n}\n","\nexport default function(collection, flatten, strict) {\n  if (void 0 === flatten) flatten = true;\n  if (void 0 === strict) strict = true;\n  let obj = {};\n  for (const [headerId, headerName, headerValues] of collection) {\n    let isEmpty = headerValues.length === 0;\n    if (!isEmpty || true !== strict) {\n      let value;\n      if (isEmpty) {\n        value = flatten ? null : [];\n      }\n      else {\n        value = flatten ? headerValues[headerValues.length - 1] : Array.prototype.slice.call(headerValues);\n      }\n      obj[headerName] = value;\n    }\n  }\n  return obj;\n}\n"],"names":["str","toString","trim","toHeaderName","toLowerCase","collection","searchHeaderId","toHeaderId","headerId","headerName","headerValues","value","existingHeader","find","push","length","values","forEach","append","obj","isFlat","keys","key","Array","isArray","item","strict","flatten","isEmpty","prototype","slice","call"],"mappings":";;;;;;AAAA,mBAAe,UAASA,GAAT,EAAc;SACpB,CAACA,OAAO,EAAR,EAAYC,QAAZ,GAAuBC,IAAvB,EAAP;;;ACCF,iBAAe,UAASF,GAAT,EAAc;SACpBG,aAAaH,GAAb,EAAkBI,WAAlB,EAAP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDF,WAAe,UAASC,UAAT,EAAqBL,GAArB,EAA0B;MACnCM,iBAAiBC,WAAWP,GAAX,CAArB;;;;;;yBACmDK,UAAnD,8HAA+D;;UAAnDG,QAAmD;UAAzCC,UAAyC;UAA7BC,YAA6B;;UACzDF,aAAaF,cAAjB,EAAiC;eACxBI,YAAP;;;;;;;;;;;;;;;;;;SAGG,IAAP;;;ACLF,aAAe,UAASL,UAAT,EAAqBL,GAArB,EAA0BW,KAA1B,EAAiC;MAC1CC,iBAAiBC,KAAKR,UAAL,EAAiBL,GAAjB,CAArB;MACI,CAACY,cAAL,EAAqB;qBACF,EAAjB;eACWE,IAAX,CAAgB,CAAEP,WAAWP,GAAX,CAAF,EAAmBG,aAAaH,GAAb,CAAnB,EAAsCY,cAAtC,CAAhB;;;iBAGaE,IAAf,CAAoB,KAAKH,KAAzB;;;ACTF,aAAe,UAASN,UAAT,EAAqBL,GAArB,EAA0B;MACnCY,iBAAiBC,KAAKR,UAAL,EAAiBL,GAAjB,CAArB;MACIY,cAAJ,EAAoB;mBACHG,MAAf,GAAwB,CAAxB;;;;ACFJ,cAAe,UAASV,UAAT,EAAqBL,GAArB,EAA0BgB,MAA1B,EAAkC;SACxCX,UAAP,EAAmBL,GAAnB;SACOiB,OAAP,CAAe;WAASC,OAAOb,UAAP,EAAmBL,GAAnB,EAAwBW,KAAxB,CAAT;GAAf;;;ACHF,eAAe,UAASN,UAAT,EAAqB;;;;;;yBACiBA,UAAnD,8HAA+D;;UAAnDG,QAAmD;UAAzCC,UAAyC;UAA7BC,YAA6B;;UACzDA,aAAaK,MAAjB,EAAyB;YACnBJ,QAAQD,aAAaA,aAAaK,MAAb,GAAsB,CAAnC,CAAZ;gBACQV,UAAR,EAAoBI,UAApB,EAAgC,CAAEE,KAAF,CAAhC;;;;;;;;;;;;;;;;;;;ACJN,eAAe,UAASQ,GAAT,EAAcC,MAAd,EAAsB;MAC/B,KAAK,CAAL,KAAWA,MAAf,EAAuBA,SAAS,IAAT,CADY;QAE7BD,OAAO,EAAb;MACId,aAAa,EAAjB;SACOgB,IAAP,CAAYF,GAAZ,EAAiBF,OAAjB,CAAyB,eAAO;QAC1BN,QAAQQ,IAAIG,GAAJ,CAAZ;QACIF,MAAJ,EAAY;aACHf,UAAP,EAAmBiB,GAAnB,EAAwBX,KAAxB;KADF,MAGK;UACC,CAACY,MAAMC,OAAN,CAAcb,KAAd,CAAL,EAA2B;gBACjB,CAAEA,KAAF,CAAR;;YAEIM,OAAN,CAAc;eAAQC,OAAOb,UAAP,EAAmBiB,GAAnB,EAAwBG,IAAxB,CAAR;OAAd;;GATJ;SAYOpB,UAAP;;;AChBF,UAAe,UAASA,UAAT,EAAqBL,GAArB,EAA0B0B,MAA1B,EAAkC;MAC3CpB,iBAAiBC,WAAWP,GAAX,CAArB;;;;;;yBACmDK,UAAnD,8HAA+D;;UAAnDG,QAAmD;UAAzCC,UAAyC;UAA7BC,YAA6B;;UACzDF,aAAaF,cAAjB,EAAiC;eACxB,SAASoB,MAAT,GAAkBhB,aAAaK,MAAb,GAAsB,CAAxC,GAA4C,IAAnD;;;;;;;;;;;;;;;;;;SAGG,KAAP;;;ACRF,aAAe,UAASV,UAAT,EAAqBsB,OAArB,EAA8BD,MAA9B,EAAsC;MAC/C,KAAK,CAAL,KAAWC,OAAf,EAAwBA,UAAU,IAAV;MACpB,KAAK,CAAL,KAAWD,MAAf,EAAuBA,SAAS,IAAT;MACnBP,MAAM,EAAV;;;;;;yBACmDd,UAAnD,8HAA+D;;UAAnDG,QAAmD;UAAzCC,UAAyC;UAA7BC,YAA6B;;UACzDkB,UAAUlB,aAAaK,MAAb,KAAwB,CAAtC;UACI,CAACa,OAAD,IAAY,SAASF,MAAzB,EAAiC;YAC3Bf,cAAJ;YACIiB,OAAJ,EAAa;kBACHD,UAAU,IAAV,GAAiB,EAAzB;SADF,MAGK;kBACKA,UAAUjB,aAAaA,aAAaK,MAAb,GAAsB,CAAnC,CAAV,GAAkDQ,MAAMM,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BrB,YAA3B,CAA1D;;YAEED,UAAJ,IAAkBE,KAAlB;;;;;;;;;;;;;;;;;;SAGGQ,GAAP;;;;;;;;;;;;;;;;"}